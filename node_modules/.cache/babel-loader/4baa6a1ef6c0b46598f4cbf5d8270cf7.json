{"ast":null,"code":"var _jsxFileName = \"/home/akanksha/todoapp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [todo, setTodo] = useState(\"\");\n  const [todoEditing, setTodoEditing] = useState(null);\n  const [editingText, setEditingText] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState('');\n  var submit = false;\n\n  const checkItem = () => {\n    if (todo.replace(/ /g, '').length < 5) {\n      setErrorMessage('Item must contain atleast 5 letters');\n    } else {\n      setErrorMessage('');\n      submit = true;\n    }\n  };\n\n  useEffect(() => {\n    const json = localStorage.getItem(\"todos\");\n    const loadedTodos = JSON.parse(json);\n\n    if (loadedTodos) {\n      setTodos(loadedTodos);\n    }\n  }, []);\n  useEffect(() => {\n    const json = JSON.stringify(todos);\n    localStorage.setItem(\"todos\", json);\n  }, [todos]);\n\n  const handleSubmit = () => {\n    if (submit) {\n      const newTodo = {\n        id: new Date().getTime(),\n        text: todo,\n        completed: false\n      };\n      setTodos([...todos].concat(newTodo));\n      setTodo(\"\");\n      setErrorMessage('');\n    }\n  };\n\n  function deleteTodo(id) {\n    let updatedTodos = [...todos].filter(todo => todo.id !== id);\n    setTodos(updatedTodos);\n  }\n\n  function toggleComplete(id) {\n    let updatedTodos = [...todos].map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"todo-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => {\n          setTodo(e.target.value);\n          checkItem();\n        },\n        onKeyPress: e => {\n          if (e.key === 'Enter') {\n            handleSubmit();\n            checkItem();\n          }\n        },\n        value: todo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: () => {\n          checkItem();\n          handleSubmit();\n        },\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontWeight: 'bold',\n        color: 'red',\n        fontSize: '1.5rem'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"completed\",\n            checked: todo.completed,\n            onChange: () => toggleComplete(todo.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), todo.id === todoEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setEditingText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textDecoration: todo.completed ? \"line-through\" : \"\",\n            color: todo.completed ? \"red\" : \"black\"\n          },\n          children: todo.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTodo(todo.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, todo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"y3gFaItIVoq5/IKeE3wjwp3WErA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/akanksha/todoapp/src/App.js"],"names":["React","useState","useEffect","App","todos","setTodos","todo","setTodo","todoEditing","setTodoEditing","editingText","setEditingText","errorMessage","setErrorMessage","submit","checkItem","replace","length","json","localStorage","getItem","loadedTodos","JSON","parse","stringify","setItem","handleSubmit","newTodo","id","Date","getTime","text","completed","concat","deleteTodo","updatedTodos","filter","toggleComplete","map","e","target","value","key","fontWeight","color","fontSize","textDecoration"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n  const [todo, setTodo] = useState(\"\");\n  const [todoEditing, setTodoEditing] = useState(null);\n  const [editingText, setEditingText] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState('');\n  var submit=false;\n\n  const checkItem = () => {\n    if (todo.replace(/ /g, '').length<5) {\n      setErrorMessage('Item must contain atleast 5 letters');\n    }\n    else{\n      setErrorMessage('');\n      submit=true;\n    }\n  };\n\n  useEffect(() => {\n    const json = localStorage.getItem(\"todos\");\n    const loadedTodos = JSON.parse(json);\n    if (loadedTodos) {\n      setTodos(loadedTodos);\n    }\n  }, []);\n\n  useEffect(() => {\n    const json = JSON.stringify(todos);\n    localStorage.setItem(\"todos\", json);\n  }, [todos]);\n\n  const handleSubmit = () => {\n    if (submit){\n    const newTodo = {\n      id: new Date().getTime(),\n      text: todo,\n      completed: false,\n    };\n    setTodos([...todos].concat(newTodo));\n    setTodo(\"\");\n    setErrorMessage('');\n    }\n  }\n\n  function deleteTodo(id) {\n    let updatedTodos = [...todos].filter((todo) => todo.id !== id);\n    setTodos(updatedTodos);\n  }\n\n  function toggleComplete(id) {\n    let updatedTodos = [...todos].map((todo) => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  }\n\n  return (\n    <div id=\"todo-list\">\n      <h1>Todo List</h1>\n      {/*todo-submit*/}\n      <div className=\"form\">\n        <input\n          type=\"text\"\n          onChange={(e) => {setTodo(e.target.value)\n            ;checkItem()}}\n          onKeyPress={e => {\n            if (e.key === 'Enter') {\n              handleSubmit();\n              checkItem();}}}\n          value={todo}\n        />\n        <button type=\"submit\" \n        onClick={() => {checkItem();handleSubmit()}}>Add Todo</button>\n      </div>\n        <p style={{\n          fontWeight: 'bold',\n          color: 'red',\n          fontSize: '1.5rem',\n        }}>{errorMessage}</p>\n\n      {/*todo-list*/}\n      {todos.map((todo) => (\n        <div key={todo.id} className=\"todo\">\n          <div className=\"todo-text\">\n          <p >\n            <input\n              type=\"checkbox\"\n              id=\"completed\"\n              checked={todo.completed}\n              onChange={() => toggleComplete(todo.id)}\n            />\n          </p>\n            {todo.id === todoEditing ? (\n              <input\n                type=\"text\"\n                onChange={(e) => setEditingText(e.target.value)}\n              />\n            ) : (\n              <div style={{textDecoration : todo.completed ? \"line-through\" : \"\"\n              ,color : todo.completed ? \"red\":\"black\"}} >{todo.text}</div>\n            )}\n          </div>\n          <div className=\"todo-actions\">\n\n            <button onClick={() => deleteTodo(todo.id)}>Delete</button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}