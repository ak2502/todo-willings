{"ast":null,"code":"var _jsxFileName = \"/home/akanksha/todoapp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [completedTodos, setCompletedTodos] = useState([]);\n  const [todo, setTodo] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState('');\n  const [showComplete, setShowComplete] = useState([]);\n  var submit = false; // for todos\n\n  useEffect(() => {\n    const json = localStorage.getItem(\"todos\");\n    const loadedTodos = JSON.parse(json);\n\n    if (loadedTodos) {\n      setTodos(loadedTodos);\n    }\n  }, []);\n  useEffect(() => {\n    const json = JSON.stringify(todos);\n    localStorage.setItem(\"todos\", json);\n  }, [todos]); // for completed todos\n\n  useEffect(() => {\n    const json = localStorage.getItem(\"completedTodos\");\n    const loadedTodos = JSON.parse(json);\n\n    if (loadedTodos) {\n      setCompletedTodos(loadedTodos);\n    }\n  }, []);\n  useEffect(() => {\n    const json = JSON.stringify(completedTodos);\n    localStorage.setItem(\"completedTodos\", json);\n  }, [completedTodos]);\n\n  const checkItem = () => {\n    if (todo.replace(/ /g, '').length < 5) {\n      setErrorMessage('Item must contain atleast 5 letters');\n    } else {\n      setErrorMessage('');\n      submit = true;\n    }\n  };\n\n  const handleSubmit = () => {\n    if (submit) {\n      const newTodo = {\n        id: new Date().getTime(),\n        text: todo,\n        completed: false,\n        addList: false\n      };\n      setTodos([...todos].concat(newTodo));\n      setTodo(\"\");\n      setErrorMessage('');\n    }\n  };\n\n  function deleteTodo(id) {\n    let updatedTodos = [...todos].filter(todo => todo.id !== id);\n    setTodos(updatedTodos);\n  }\n\n  function toggleComplete(id) {\n    let updatedTodos = [...todos].map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n\n        if (todo.completed) {\n          setCompletedTodos([...completedTodos].concat(todo));\n        } else {\n          let updatedItems = [...completedTodos].filter(todo => todo.id !== id);\n          setCompletedTodos(updatedItems);\n        }\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  }\n\n  const removeCompleted = () => {\n    const updatedTodos = todos.filter(item => {\n      return !item.completed === true;\n    });\n    setTodos(updatedTodos);\n    let updatedList = [...completedTodos].filter(todo => todo.completed === true);\n    setShowComplete(updatedList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"todo-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => {\n            setTodo(e.target.value);\n            checkItem();\n          },\n          onKeyPress: e => {\n            if (e.key === 'Enter') {\n              handleSubmit();\n              checkItem();\n            }\n          },\n          value: todo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: () => {\n            checkItem();\n            handleSubmit();\n          },\n          children: \"Add Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontWeight: 'bold',\n          color: 'red',\n          fontSize: '1.5rem'\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"completed\",\n              checked: todo.completed,\n              onChange: () => {\n                toggleComplete(todo.id);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textDecoration: todo.completed ? \"line-through\" : \"\",\n              color: todo.completed ? \"red\" : \"black\"\n            },\n            children: todo.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteTodo(todo.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          removeCompleted();\n        },\n        children: \"Remove Completed Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"complete-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Completed Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), showComplete.map(showComplete => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-text\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: showComplete.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)\n      }, showComplete.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"T880HHe0giiKCafU9B1+mjUVKa8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/akanksha/todoapp/src/App.js"],"names":["React","useState","useEffect","App","todos","setTodos","completedTodos","setCompletedTodos","todo","setTodo","errorMessage","setErrorMessage","showComplete","setShowComplete","submit","json","localStorage","getItem","loadedTodos","JSON","parse","stringify","setItem","checkItem","replace","length","handleSubmit","newTodo","id","Date","getTime","text","completed","addList","concat","deleteTodo","updatedTodos","filter","toggleComplete","map","updatedItems","removeCompleted","item","updatedList","e","target","value","key","fontWeight","color","fontSize","textDecoration"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n  const [completedTodos, setCompletedTodos] = useState([]);\n  const [todo, setTodo] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState('');\n  const [showComplete, setShowComplete] = useState([]);\n  var submit=false;\n\n// for todos\n  useEffect(() => {\n    const json = localStorage.getItem(\"todos\");\n    const loadedTodos = JSON.parse(json);\n    if (loadedTodos) {\n      setTodos(loadedTodos);\n    }\n  }, []);\n\n  useEffect(() => {\n    const json = JSON.stringify(todos);\n    localStorage.setItem(\"todos\", json);\n  }, [todos]);\n\n// for completed todos\n  useEffect(() => {\n    const json = localStorage.getItem(\"completedTodos\");\n    const loadedTodos = JSON.parse(json);\n    if (loadedTodos) {\n      setCompletedTodos(loadedTodos);\n    }\n  }, []);\n\n  useEffect(() => {\n    const json = JSON.stringify(completedTodos);\n    localStorage.setItem(\"completedTodos\", json);\n  }, [completedTodos]);\n\n  const checkItem = () => {\n    if (todo.replace(/ /g, '').length<5) {\n      setErrorMessage('Item must contain atleast 5 letters');\n    }\n    else{\n      setErrorMessage('');\n      submit=true;\n    }\n  };\n\n  const handleSubmit = () => {\n    if (submit){\n    const newTodo = {\n      id: new Date().getTime(),\n      text: todo,\n      completed: false,\n      addList: false,\n    };\n\n    setTodos([...todos].concat(newTodo));\n    setTodo(\"\");\n    setErrorMessage('');\n    }\n  }\n\n  function deleteTodo(id) {\n    let updatedTodos = [...todos].filter((todo) => todo.id !== id);\n    setTodos(updatedTodos);\n  }\n\n  function toggleComplete(id) {\n    let updatedTodos = [...todos].map((todo) => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n        if(todo.completed ){\n          setCompletedTodos([...completedTodos].concat(todo));\n        }\n        else {\n            let updatedItems = [...completedTodos].filter((todo) => \n              todo.id !== id);\n           setCompletedTodos(updatedItems);\n        }\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  }\n\nconst removeCompleted = () => {\n    const updatedTodos = todos.filter((item) => {\n      return !item.completed === true;\n      });\n      setTodos(updatedTodos);\n\n    let updatedList = [...completedTodos].filter((todo) => \n      todo.completed ===true);\n\n      setShowComplete(updatedList);\n  };\n\n  return (\n    <div className='flex-container'>\n    <div id=\"todo-list\">\n      <h1>Todo List</h1>\n\n      {/*todo-submit*/}\n      <div className=\"form\">\n        <input\n          type=\"text\"\n          onChange={(e) => {setTodo(e.target.value)\n            ;checkItem()}}\n          onKeyPress={e => {\n            if (e.key === 'Enter') {\n              handleSubmit();\n              checkItem();}}}\n          value={todo}/>\n        <button type=\"submit\" \n        onClick={() => {checkItem();handleSubmit()}}>Add Todo</button>\n      </div>\n        <p style={{\n          fontWeight: 'bold',\n          color: 'red',\n          fontSize: '1.5rem',\n        }}>{errorMessage}</p>\n\n      {/*todo-list*/}\n      {todos.map((todo) => (\n        <div key={todo.id} className=\"todo\">\n          <div className=\"todo-text\">\n          <p >\n            <input\n              type=\"checkbox\"\n              id=\"completed\"\n              checked={todo.completed}\n              onChange={() => {toggleComplete(todo.id);\n              }}\n            />\n          </p>\n              <div style={{textDecoration : todo.completed ? \"line-through\" : \"\"\n              ,color : todo.completed ? \"red\":\"black\"}} >{todo.text}</div>\n          </div>\n          <div className=\"todo-actions\">\n            <button onClick={() => deleteTodo(todo.id)}>Delete</button>\n          </div>\n        </div>\n      ))}\n      <button onClick={() => {removeCompleted()}}>\n              Remove Completed Tasks\n      </button>\n      </div>\n\n      {/*remove-completed-tasks*/}\n      <div id=\"complete-list\">\n        <div >\n          <h1>Completed Tasks</h1>\n        </div>\n       \n        {showComplete.map((showComplete) => ( \n        <div key={showComplete.id} >\n            <div className=\"todo-text\">\n              <ul ><li>{showComplete.text}</li></ul>\n            </div>\n        </div>\n      ))}\n      </div>\n\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}